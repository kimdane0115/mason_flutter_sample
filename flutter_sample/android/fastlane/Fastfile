# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)

platform :android do
  desc "Runs all the tests"
  lane :test do
    gradle(task: "test")
  end

  desc "Submit a new Beta Build to Crashlytics Beta"
  lane :beta do
    # gradle(task: "clean assembleRelease")
    # crashlytics
    
    # Build app
    flutter_build_android

    version = get_properties_value(
      key: "flutter.versionName",
      path: "local.properties"
    )
    build = get_properties_value(
      key: "flutter.versionCode",
      path: "local.properties"
    )
    
    # firebase distribute
    firebase_app_distribution(
      app: "1:179101698842:android:dc33b9a2994822c5237aa3",
      apk_path: "../build/app/outputs/apk/prod/debug/app-prod-debug.apk",
      groups: "android"
    )
  
    # sh "your_script.sh"
    # You can also use other beta testing services here
  end

  desc "Deploy a new version to the Google Play"
  lane :deploy do
    gradle(task: "clean assembleRelease")
    upload_to_play_store
  end

  # Flutter build Android
  desc "Flutter build Android"
  lane :flutter_build_android do
    puts "flutter clean"
    sh("flutter clean")
    
    puts "cd .."
    sh("cd", "..")

    puts "Flutter build Android"

    if ENV["ENV"] == "dev"
      sh("flutter", "build", "apk", "--debug", "--flavor",ENV['ENV'] , "-t", ENV['MAIN_TARGET'])
    end

    if ENV["ENV"] == "staging"
      sh("flutter", "build", "apk", "--debug", "--flavor",ENV['ENV'] , "-t", ENV['MAIN_TARGET'])
    end
    
    if ENV["ENV"] == "prod"
      # sh("flutter", "build", "appbundle", "--flavor",ENV['ENV'] , "-t", ENV['MAIN_TARGET'])
      sh("flutter", "build", "apk", "--debug", "--flavor",ENV['ENV'] , "-t", ENV['MAIN_TARGET'])
    end
    
  end
end
